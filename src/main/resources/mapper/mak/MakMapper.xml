<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pen.app.mak.mapper.MakMapper">
	<!-- 쿼리 수정하기 다 건에 대해 그룹 함수로 빼줘야함 -->
	<!-- 계약서 기반 계획서 시작 -->
	<!-- 계획서가 존재하는 계약 내용들 즉 현재 수립된 계획서 불러오기 비교 구문용(기본그리드) -->
	<select id="getPlanList" resultType="PlanVO">
		select	plan_nm,acc_code||acc_name	contNm,
		        prod_name,
		        to_char(plan_date,'yyyy-MM-dd')
		        planDate,to_char(plan_sdate,'yyyy-MM-dd')
		        planSdate,
		        priority,cont_det_code,plan_code,pd_code,connect_code,plan_type,
		        to_char(plan_clsdate,'yyyy-MM-dd') planClsdate,
		        to_char(cont_det_release,'yyyy-MM-dd') contDetRelease,
		        plan_state,
		        plan_qnt,
		        (cont_det_quan - plan_qnt) contDetQuan,
		        prod_code 
		   from	conplan_view 
		  where plan_type='plan' 
		  order by pd_code desc
	</select>

	<!-- 조회 조건을 위해 계약별 계획건 수 조회 -->
	<select id="getContCount" resultType="int"
		parameterType="string">
		select count(cont_det_code) count from mak_plan_to_ord
		where
		cont_det_code=#{contDetCode}
	</select>

	<!-- 마지막 조건 잔류수량 구하는 조회 -->
	<select id="getLeftQuan" resultType="int" parameterType="string">
		select
		cont_det_quan - sum(plan_qnt) contDetQuan from conplan_view where
		cont_det_code=#{contDetCode} and cont_det_progress='납기필요' group by cont_det_quan,cont_det_code
	</select>

	<!-- 현재 잔존하는 계약수량 존재하는 계약 내용 불러오기 모달에 뜨는 xml -->
	<select id="getPlanning" resultType="PlanVO">
		select	acc_code||acc_name||'-'||prod_name contNm,
		        cont_det_quan - sum(plan_qnt)
		        contDetQuan,
		        prod_name, 
		        to_char(cont_det_release,'yyyy-MM-dd')
		        contDetRelease,cont_det_code,prod_code 
		  from conplan_view 
		 where cont_det_code =	#{contDetCode} 
		   and (select cont_det_quan-sum(plan_qnt)
		               contDetQuan 
		          from conplan_view 
		         where cont_det_code = #{contDetCode}
		         group by cont_det_quan)>0 
	 	   and cont_det_progress='납기필요' 
		 group by cont_det_code, cont_det_quan,prod_name,cont_det_release,acc_code||acc_name,prod_code
	</select>

	<!-- 현재 존재하는 계약서들 불러오기 비교구문용 -->
	<select id="getCont" resultType="PlanVO">
		select
		acc_code||acc_name||'-'||prod_name
		contNm,CONT_DET_CODE,PROD_CODE,PROD_NAME,CONT_DET_PRICE,CONT_DET_QUAN,to_char(CONT_DET_RELEASE,'yyyy-MM-dd')contDetRelease,CONT_DET_PROGRESS,ACC_CODE,ACC_NAME,to_char(CONT_DATE,'yyyy-MM-dd')
		contDate,to_char(CONT_DUE_DATE,'yyyy-MM-dd')
		contDueDate,CONT_PROGRESS,CONT_NOTE,EMP_NUM,cont_code from
		con_base_bns where cont_det_progress='납기필요'
	</select>

	<!-- 계약연결코드 불러오기 비교구문용 -->
	<select id="getConnect" resultType="PlanVO">
		select * from mak_plan_to_ord
		where cont_det_code = #{contDetCode}
	</select>


	<!-- 계약서 내용(가공) 불러오기 모달에 띄우는 용도[계획서가 없는 계약건] -->
	<select id="getContr" resultType="PlanVO">
		select acc_code||acc_name||'-'||prod_name contNm, cont_det_quan,
		prod_name,
		to_char(cont_det_release,'yyyy-MM-dd')
		contDetRelease,cont_det_code,prod_code
		from con_base_bns
		<where>
			<foreach collection="list" item="cdc" separator=" and ">
				cont_det_code != #{cdc}
			</foreach>
			and cont_det_progress='납기필요'
		</where>
	</select>

	<!-- 계획 등록 -->
	<update id="insertPlan" parameterType="PlanVO">
		insert into MAK_PLAN (PLAN_CODE, PLAN_NM,plan_type,plan_date,MAK_EMP_NUM )
		values (get_plan_seq(), #{planNm}, 'plan', sysdate, '1111')
	</update>

	<!-- 계획 상세 등록 -->
	<update id="insertDetailPlan" parameterType="PlanVO">
		insert into
		mak_plan_detail values
		   (get_pd_seq(),
		    #{planState},
		    #{prodCode},
		    #{planQnt},
		    #{planSdate},
		    #{planClsdate},
		    #{priority},
		    'MAK-PLAN-'||(select last_number-1 from user_sequences where sequence_name='MAK_PLAN_SEQ'))
	</update>

	<!-- 참고테이블 등록 -->
	<update id="setPlanCont" parameterType="PlanVO">
		insert into
		mak_plan_to_ord(connect_code,cont_det_code,pd_code) values
		(get_plan_cont_seq(),
		#{contDetCode},'MAK-P-D-'||(select last_number-1
		from user_sequences where sequence_name='MAK_PD_SEQ'))
	</update>

	<!-- 계획참고 테이블 삭제 -->
	<delete id="delConPlan" parameterType="int">
		delete from
		mak_plan_to_ord where connect_code=#{connectCode}
	</delete>

	<!-- 계획 상세 삭제 -->
	<delete id="delDPlan" parameterType="string">
		delete from mak_plan_detail
		where pd_code=#{pdCode}
	</delete>

	<!-- 계획 삭제 -->
	<delete id="delPlan" parameterType="string">
		delete from mak_plan where
		plan_code = #{planCode}
	</delete>



	<!-- 계획서 하나에 걸린 계획상세 건 수 조회 -->
	<select id="getPdCount" parameterType="string" resultType="int">
		select count(*) count from mak_plan_detail where plan_code=#{planCode}
	</select>

	<!-- 계획 수정 -->
	<update id="modPlan">
		update mak_plan_detail 
		   set
		       plan_qnt    = #{planQnt},
		       priority    = #{priority},
		       plan_sdate  = #{planSdate},
		       plan_clsdate= #{planClsdate}
		 where pd_code=#{pdCode}
	</update>

	<!-- 계획만료기간 내에 조회 조건에 따른 검색 -->
	<select id="getPlanningList" parameterType="PlanVO" resultType="PlanVO">
		select plan_nm,acc_code||acc_name||'-'||prod_name contNm,prod_name,to_char(plan_date,'yyyy-MM-dd')
		planDate,to_char(plan_sdate,'yyyy-MM-dd')
		planSdate,priority,cont_det_code,plan_code,pd_code,connect_code,plan_type,
		to_char(plan_clsdate,'yyyy-MM-dd')
		planClsdate,to_char(cont_det_release,'yyyy-MM-dd') contDetRelease,
		plan_state,plan_qnt,cont_det_quan-plan_qnt contDetQuan,prod_code 
		from conplan_view 
		where plan_type='plan' 
		  and trunc(plan_date)	between #{planSdate} and to_date(#{planClsdate}||'23:59:59','yyyy-mm-dd hh24:mi:ss')
		order by pd_code
	</select>

	<!-- 계약서 기반 계획서 끝 -->


	<!-- 주문서 기반 계획서 시작 -->
	<!-- 계획서가 존재하는 주문 내용들 즉 현재 수립된 계획서 불러오기 비교 구문용 -->
	<select id="getOrdList" resultType="PlanVO">
		select
		plan_nm,acc_code||acc_name
		contNm,prod_name,to_char(plan_date,'yyyy-MM-dd')
		planDate,to_char(plan_sdate,'yyyy-MM-dd')
		planSdate,priority,ord_det_code,plan_code,pd_code,connect_code,plan_type,
		to_char(plan_clsdate,'yyyy-MM-dd')
		planClsdate,to_char(ord_due_date,'yyyy-MM-dd') ordDueDate,
		plan_state,plan_qnt,ord_det_quan-plan_qnt ordDetQuan,prod_code from
		ordplan_view where plan_type='order' order by pd_code desc
	</select>


	<!-- 조회 조건을 위해 주문별 계획건 수 조회 -->
	<select id="getOrdCount" resultType="int" parameterType="string">
		select
		count(ord_det_code) count from mak_plan_to_ord where
		ord_det_code=#{ordDetCode}
	</select>

	<!-- 마지막 조건 잔류수량 구하는 조회 -->
	<select id="getLeaveQuan" resultType="int"
		parameterType="string">
		select ord_det_quan-sum(plan_qnt) ordDetQuan from
		ordplan_view where
		ord_det_code=#{ordDetCode} group by
		ord_det_quan,ord_det_code
	</select>

	<!-- 현재 잔존하는 주문수량 존재하는 주문 내용 불러오기 모달에 뜨는 xml -->
	<select id="getOrdering" resultType="PlanVO">
		select
		acc_code||acc_name||'-'||prod_name contNm,ord_det_quan-sum(plan_qnt)
		ordDetQuan,
		prod_name, to_char(ord_due_date,'yyyy-MM-dd')
		ordDueDate,ord_det_code,prod_code from ordplan_view where ord_det_code
		=
		#{ordDetCode} and (select ord_det_quan-sum(plan_qnt) contDetQuan from
		ordplan_view where ord_det_code =
		#{ordtDetCode} group by
		ord_det_quan)>0 group by ord_det_code,
		ord_det_quan,prod_name,ord_due_date,acc_code||acc_name,prod_code
	</select>

	<!-- 현재 존재하는 주문서들 불러오기 비교구문용 -->
	<select id="getOrd" resultType="PlanVO">
		select
		acc_code||acc_name||'-'||prod_name
		contNm,ord_DET_CODE,PROD_CODE,PROD_NAME,ord_DET_PRICE,ord_DET_QUAN,to_char(ord_Due_date,'yyyy-MM-dd')
		ordDueDate,ACC_CODE,ACC_NAME,to_char(ord_DATE,'yyyy-MM-dd')
		ordDate,to_char(ord_DUE_DATE,'yyyy-MM-dd')
		ordDueDate,ord_PROGRESS,ord_NOTE,EMP_NUM,ord_code from ord_base_bns order by ord_due_date desc
	</select>
	<!-- 계약연결코드 불러오기 비교구문용 -->
	<select id="getConnection" resultType="PlanVO">
		select * from mak_plan_to_ord where ord_det_code = #{ordDetCode}
	</select>
	<!-- 주문서 내용(가공) 불러오기 모달에 띄우는 용도[계획서가 없는 계약건] -->
	<select id="getOrder" resultType="PlanVO">
		select
		acc_code||acc_name||'-'||prod_name contNm, ord_det_quan,
		prod_name, to_char(ord_due_date,'yyyy-MM-dd')
		ordDueDate,ord_det_code,prod_code from ord_base_bns
		<where>
			<foreach collection="list" item="cdc" separator=" and ">
			ord_det_code != #{cdc}
			</foreach>
		</where>
	</select>
	<!-- 주문서 기반 계획서 등록 -->
	<update id="insertOrd" parameterType="PlanVO">
		insert into MAK_PLAN(PLAN_CODE, 
PLAN_NM, 
PLAN_TYPE,  
PLAN_DATE,         
MAK_EMP_NUM )
		values
		(get_plan_seq,#{planNm},'order',sysdate,'1111')
	</update>

	<!-- 주문서 참고 테이블 등록 -->
	<update id="setPlanOrd" parameterType="PlanVO">
		insert into mak_plan_to_ord(connect_code,ord_det_code,pd_code)
		values
		(get_plan_cont_seq,#{ordDetCode},'MAK-P-D-'||(select last_number-1
		from user_sequences where sequence_name='MAK_PD_SEQ'))
	</update>

	<!-- 주문서상세 업데이트(등록 -->
	<update id="updateOrd" parameterType="string">
		update bns_order_detail
		set
		ord_det_progress='작업 중' where
		ord_det_code=#{ordDetCode}

	</update>
	<!-- 주문 상세 상태 업데이트(삭제) -->
	<update id="updateOrder" parameterType="string">
		update bns_order_detail
		set ord_det_progress='접수완료'
		where
		ord_det_code=#{ordDetCode}
	</update>
	 
	<select id="getOrderingList" parameterType="PlanVO" 	resultType="PlanVO">
	 select plan_nm,acc_code||acc_name||'-'||prod_name contNm,prod_name,to_char(plan_date,'yyyy-MM-dd') planDate,
	 to_char(plan_sdate,'yyyy-MM-dd') planSdate,priority,ord_det_code,plan_code,pd_code,connect_code,plan_type, 
		to_char(plan_clsdate,'yyyy-MM-dd') planClsdate,to_char(ord_due_date,'yyyy-MM-dd') 
		ordDueDate, plan_state,plan_qnt,ord_det_quan-plan_qnt ordDetQuan,prod_code 
		from ordplan_view where plan_type='order' and plan_date between #{planSdate} 
		and to_date(#{planClsdate}||'23:59:59','yyyy-mm-dd hh24:mi:ss') order by pd_code
		 </select>
		 
		 <select id="getModalOrd" resultType="PlanVO">
		select acc_code||acc_name||'-'||prod_name contNm, ord_det_quan,
		prod_name, to_char(ord_due_date,'yyyy-MM-dd')
		ordDueDate,ord_det_code,prod_code from ord_base_bns where ord_due_date between to_date(#{planSdate},'yyyy-mm-dd') 
		and to_date(#{planClsdate}||'23:59:59','yyyy-mm-dd hh24:mi:ss') order by ord_due_date desc
		</select>
		
		<select id="getModalOrder" resultType="PlanVO">
		select
		acc_code||acc_name||'-'||prod_name contNm, ord_det_quan,
		prod_name, to_char(ord_due_date,'yyyy-MM-dd')
		ordDueDate,ord_det_code,prod_code from ord_base_bns
		<where>
			<foreach collection="list" item="cdc" separator=" and ">
			ord_det_code != #{cdc}
			</foreach>
		</where>
		and ord_due_date between to_date(#{vo.planSdate},'yyyy-mm-dd') 
		and to_date(#{vo.planClsdate}||'23:59:59','yyyy-mm-dd hh24:mi:ss') order by ord_due_date desc
	</select>
</mapper>