<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pen.app.qip.mapper.TestMapper">
	<!-- 자재 입고검사 모달 리스트 조회 -->
	<select id="matTestList" resultType="TestMatModalVO">
		SELECT MAT_DTAORDCODE,
				MAT_ORDERNUM,
				TO_CHAR(MAT_ORDERDATE,'YYYY-MM-DD') AS MAT_ORDERDATE,
				MAT_CODE,
				MAT_NAME,
				MAT_ORDER_QY,
				MAT_UNIT,
				ACC_CODE,
				ACC_NAME,
				ACC_TEL
		FROM(SELECT MAT_DTAORDCODE,
					MAT_ORDERNUM,
					MAT_ORDERDATE,
					MAT_CODE,
					MAT_ORDER_QY,
					ACC_CODE,
					ACC_NAME,
					ACC_TEL
			FROM MAT_ORDER JOIN MAT_ORDER_HEADER USING(MAT_ORDERNUM) JOIN COM_CODE_ACCOUNT USING(ACC_CODE)) JOIN COM_CODE_MAT USING(MAT_CODE)
		WHERE MAT_DTAORDCODE NOT IN (SELECT MAT_DTAORDCODE
									FROM QIP_LIST_MAT)
		ORDER BY MAT_ORDERDATE
	</select>
	
	<!-- 제품 검사 모달 리스트 조회 -->
	<select id="itemTestList" resultType="TestItemModalVO">
	SELECT indica_code,
       item_lot,
       item_code,
       item_name,
       item_cnt,
       item_unit,
       item_date,
       item_type,
       (
           SELECT DISTINCT proc_name
           FROM mak_proc_prod
           JOIN com_code_proc USING ( proc_code )
           WHERE indica_code = b.indica_code
                 AND prod_nm = b.item_name
       ) AS prev_proc_name
FROM (
    SELECT indica_code,
           mat_lot                          AS item_lot,
           mat_code                         AS item_code,
           (
               SELECT semi_name
               FROM com_code_semi
               WHERE semi_code = mat_code
           )                                AS item_name,
           cnt                              AS item_cnt,
           (
               SELECT semi_unit
               FROM com_code_semi
               WHERE semi_code = a.mat_code
           )                                AS item_unit,
           to_char(hold_date, 'yyyy-mm-dd') AS item_date,
           'semi'                           AS item_type
    FROM (
        SELECT *
        FROM mak_hold
        JOIN mak_indica USING ( indica_code )
        WHERE mat_lot LIKE 'PRD-S%'
              AND qip_code_list_prod IS NULL
    ) a
) b
	UNION
	SELECT indica_code,
	       prdt_lot,
	       prod_code,
	       prdt_nm,
	       cnt,
	       prdt_unit,
	       to_char(prdt_date, 'yyyy-mm-dd'),
	       ( SELECT proc_name
	         FROM com_code_proc
	         WHERE proc_code = mak_proc_prod.proc_code
	       ),
	       'prod'
	FROM mak_prdt
	JOIN mak_proc_prod USING ( prcs_code )
	WHERE qip_code_list_prod IS NULL
	</select>
	
	<!-- 보관기간초과 자재 모달 리스트 조회 -->
	<select id="expTestList" resultType="TestExpModalVO">
		SELECT MAT_LOT AS EXP_LOT,
				MAT_CODE AS EXP_CODE,
				MAT_INVNTRY.MAT_NAME AS EXP_NAME,
				MAT_QNT AS EXP_CNT,
				MAT_UNIT AS EXP_UNIT,
				TO_CHAR(MAT_KEEPDATE, 'YYYY-MM-DD') AS EXP_DATE
		FROM MAT_INVNTRY JOIN COM_CODE_MAT USING(MAT_CODE)
		WHERE MAT_STATE = '검사필요'
	</select>

	<insert id="insertMatTest">
		INSERT ALL
		INTO QIP_LIST_MAT VALUES(
		'TEST-MAT-'||LPAD(TEST_MAT_SEQ.NEXTVAL,6,'0'),
		#{rVO.targetCode},
		to_date(#{rVO.testDate}, 'yyyy-mm-dd'),
		#{rVO.empNum},
		#{rVO.testNum},
		#{rVO.testTnumDef},
		#{rVO.testTnumPass}
		)
		<foreach collection="list" item="vo" separator=" ">
			INTO
			QIP_LIST_DETAIL VALUES (
			GET_TEST_DETAIL_SEQ(),
			'TEST-MAT-'||LPAD(TEST_MAT_SEQ.NEXTVAL,6,'0'),
			#{vo.testCode},
			#{vo.testNumDef}
			)
		</foreach>
		SELECT * FROM DUAL
	</insert>
	
	<insert id="insertItemTest">
	DECLARE
	v_qip_seq varchar2(30) := 'TEST-ITEM-'||LPAD(TEST_PROD_SEQ.NEXTVAL,6,'0');
	BEGIN
	
	INSERT ALL
		INTO QIP_LIST_PROD VALUES(
		v_qip_seq,
		#{rVo.targetCode},
		to_date(#{rVo.testDate}, 'yyyy-mm-dd'),
		#{rVo.empNum},
		#{rVo.testNum},
		#{rVo.testTnumDef},
		#{rVo.testTnumPass},
		#{rVo.prevProcName}
		)
		<foreach collection="list" item="vo" separator=" ">
			INTO
			QIP_LIST_DETAIL VALUES (
			GET_TEST_DETAIL_SEQ(),
			v_qip_seq,
			#{vo.testCode},
			#{vo.testNumDef}
			)
		</foreach>
		SELECT * FROM DUAL;
		
	UPDATE
	<choose>
	<when test='rVo.itemType == "semi"'>
	MAK_HOLD
	SET CNT = #{rVo.testTnumPass}, QIP_CODE_LIST_PROD = v_qip_seq
	WHERE MAT_LOT = #{rVo.itemLot};
	</when>
	<otherwise>
	MAK_PRDT
	SET CNT = #{rVo.testTnumPass}, QIP_CODE_LIST_PROD = v_qip_seq
	WHERE PRDT_LOT = #{rVo.itemLot};
	</otherwise>
	</choose>
	END;
	</insert>
	
	<insert id="insertExpTest">
	DECLARE BEGIN
		INSERT ALL
		INTO QIP_LIST_EXPIRED VALUES(
		'TEST-EXP-'||LPAD(TEST_EXP_SEQ.NEXTVAL,6,'0'),
		#{rVO.targetCode},
		to_date(#{rVO.testDate}, 'yyyy-mm-dd'),
		#{rVO.empNum},
		#{rVO.testNum},
		#{rVO.testTnumDef},
		#{rVO.testTnumPass}
		)
		
		INTO MAT_DSUSE VALUES(
		MAT_DSUSE_SEQ.NEXTVAL,
		'TEST-EXP-'||LPAD(TEST_EXP_SEQ.NEXTVAL,6,'0'),
		#{rVO.targetCode},
		#{rVO.testNum},
		#{rVO.testTnumDef},
		#{rVO.testTnumPass},
		to_date(#{rVO.testExpDate}, 'yyyy-mm-dd')
		)
		<foreach collection="list" item="vo" separator=" ">
			INTO
			QIP_LIST_DETAIL VALUES (
			GET_TEST_DETAIL_SEQ(),
			'TEST-EXP-'||LPAD(TEST_EXP_SEQ.NEXTVAL,6,'0'),
			#{vo.testCode},
			#{vo.testNumDef}
			)
		</foreach>
		SELECT * FROM DUAL
		;
		
		UPDATE MAT_INVNTRY
		SET
		MAT_STATE = '검사완료',
		MAT_KEEPDATE = to_date(#{rVO.testExpDate}, 'yyyy-mm-dd')
		WHERE MAT_LOT = #{rVO.targetCode};
		
	END; 
	</insert>
</mapper>