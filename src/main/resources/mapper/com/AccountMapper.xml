<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pen.app.com.mapper.AccountMapper">

	<!-- 거래처 리스트 조회 -->
	<select id="getAccountList" resultType="AccountVO">
		SELECT * FROM
		COM_CODE_ACCOUNT
		ORDER BY ACC_CODE
	</select>

	<!-- 타입별 거래처 리스트 조회 -->
	<select id="getAccListWithType" resultType="AccountVO">
		<if test="accType == '전체'">
			SELECT * FROM COM_CODE_ACCOUNT ORDER BY ACC_CODE
		</if>
		<if test="accType != '전체'">
			SELECT * FROM COM_CODE_ACCOUNT WHERE ACC_TYPE = #{accType} ORDER BY ACC_CODE
		</if>
	</select>
	<!-- 거래처 타입 조회 -->
	<select id="getAccTypeList" resultType="String">
		SELECT INNER_CODE_NAME
		FROM COM_INNER_CODE WHERE COM_CODE = 'ACC-TYP' ORDER BY COM_INNER_CODE
	</select>

	<!-- 거래처 코드 가져오기 -->
	<select id="getAccCode" resultType="String">
		SELECT
		'ACC-'||LPAD(LAST_NUMBER,5,'0') FROM USER_SEQUENCES WHERE
		SEQUENCE_NAME = 'ACC_SEQ'
	</select>

	<!-- 거래처 수정 -->
	<update id="modifyAccList">
		<foreach collection="list" item="vo" index="index"
			separator=";" open="DECLARE BEGIN" close="; END;">
			UPDATE COM_CODE_ACCOUNT
			SET
				ACC_NAME = #{vo.accName},
				ACC_TYPE = #{vo.accType},
				ACC_ADDRESS = #{vo.accAddress},
				ACC_TEL = #{vo.accTel}
			WHERE ACC_CODE = #{vo.accCode}
		</foreach>
	</update>

	<!-- 거래처 등록 -->
	<insert id="insertAccList">
		<foreach collection="list" item="vo" open="INSERT ALL"
			close="SELECT * FROM DUAL" separator=" ">
			INTO COM_CODE_ACCOUNT VALUES (
				GET_ACC_SEQ,
				#{vo.accName},
				#{vo.accType},
				#{vo.accAddress},
				#{vo.accTel}
			)
		</foreach>
	</insert>

	<!-- 거래처 삭제 -->
	<delete id="deleteAccList">
		DELETE FROM COM_CODE_ACCOUNT WHERE
		<foreach collection="list" item="vo" separator="OR">
			ACC_CODE = #{vo.accCode}
		</foreach>
	</delete>

	<!-- 거래처별 항목 리스트 조회 -->
	<select id="getItemListWithAccCode" resultType="ItemVO">
		SELECT *
		FROM ( SELECT acc_code,
		              acc_item,
		              mat_code AS item_code,
		              mat_name AS item_name,
		              mat_std  AS item_std,
		              mat_unit AS item_unit,
		              mat_use AS item_use,
		              com_acc_item_num
		       FROM com_account_item a
		       JOIN com_code_mat b ON ( a.acc_item = b.mat_code )
		       UNION
		       SELECT acc_code,
		              acc_item,
		              prod_code,
		              prod_name,
		              prod_std,
		              prod_unit,
		              prod_use,
		              com_acc_item_num
		       FROM com_account_item a
		       JOIN com_code_prod b ON ( a.acc_item = b.prod_code )
		)
		WHERE acc_code = #{accCode}
		ORDER BY 3
	</select>

	<!-- 거래처별, 거래처구분별 리스트 조회 -->
	<select id="searchAccList" resultType="AccountVO">
		<if test="accType == '전체'">
			SELECT *
			FROM com_code_account
			WHERE acc_name LIKE '%'|| #{accName}|| '%'
			ORDER BY acc_code
		</if>
		<if test="accType != '전체'">
			SELECT *
			FROM COM_CODE_ACCOUNT
			WHERE ACC_NAME LIKE '%'|| #{accName} ||'%'
			AND ACC_TYPE = #{accType} ORDER BY ACC_CODE
		</if>
	</select>
	
	<!-- 거래처 리스트 가져오기(동적쿼리로) -->
	<select id="getAccList" resultType="AccountVO">
		SELECT acc_code,
		       acc_name,
		       acc_type
		FROM com_code_account
		<if test='accName != null and accName != ""'>
		WHERE ACC_NAME LIKE '%'||#{accName}||'%'
		</if>
		ORDER BY 1
	</select>
	
	<!-- 모든 자재, 완제품 리스트 조회 -->
	<select id="getAllAccItemList" resultType="ItemVO">
		SELECT * FROM(
			<choose>
			<when test='accType == "자재 구매"'>
			SELECT MAT_CODE AS ITEM_CODE, MAT_NAME AS ITEM_NAME, MAT_STD AS ITEM_STD, MAT_UNIT AS ITEM_UNIT, MAT_USE AS ITEM_USE
			FROM COM_CODE_MAT
			</when>
			<otherwise>
			SELECT PROD_CODE AS ITEM_CODE, PROD_NAME AS ITEM_NAME, PROD_STD AS ITEM_STD, PROD_UNIT AS ITEM_UNIT, PROD_USE AS ITEM_USE
			FROM COM_CODE_PROD
			</otherwise>		
			</choose>
			)
			<if test='itemName != null and itemName != ""'>
			WHERE item_name LIKE '%'||#{itemName}||'%'
			</if>
			ORDER BY 1
	</select>
	
		<!-- 거래 품목 정보수정 -->
	<update id="modifyAccItemList">
		<foreach collection="list" item="vo" index="index"
			separator=";" open="DECLARE BEGIN" close="; END;">
			UPDATE COM_ACCOUNT_ITEM
			SET
			ACC_CODE = #{vo.accCode},
			ACC_ITEM = #{vo.itemCode}
			WHERE
			COM_ACC_ITEM_NUM = #{vo.comAccItemNum}
		</foreach>
	</update>

	<!-- 거래 품목 추가 -->
	<insert id="insertAccItemList">
		<foreach collection="list" item="vo" open="INSERT ALL"
			close="SELECT * FROM DUAL" separator=" ">
			INTO COM_ACCOUNT_ITEM VALUES (
			GET_ACC_ITEM_SEQ(),
			#{vo.accCode},
			#{vo.itemCode}
			)
		</foreach>
	</insert>

	<!-- 거래 품목 삭제 -->
	<delete id="deleteAccItemList">
		DELETE FROM COM_ACCOUNT_ITEM WHERE
		<foreach collection="list" item="vo" separator="OR">
			COM_ACC_ITEM_NUM =
			#{vo.comAccItemNum}
		</foreach>
	</delete>
</mapper>