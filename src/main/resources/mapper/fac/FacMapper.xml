<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pen.app.fac.mapper.FacMapper">
	<!--설비단건조회 <select id="getFac" resultType="FacInfoVO"> select * from fac_info 
		where fac_code = #{facCode} </select> -->

	<!-- 설비 특정검색조회 -->
	<select id="getList" resultType="FacInfoVO">
 SELECT fac_code,
		fac_name,
		operate_check,
		check_cycle,
		to_char(install_date,'yyyy-MM-dd')
		installDate,
		maker_name,
		temp_min,
		temp_max,
		emp_num
   FROM fac_info
	<where>
		<if test="searchDiv != null and searchDiv != ''">
			<!-- ${searchDiv} = #{searchName} title LIKE '%'|| #{keyword} || '%' -->
			${searchDiv} = #{searchName} 
		</if>
	</where>
	
	</select>

	<!-- 설비정보목록조회 <select id="getList" resultType="FacInfoVO"> select fac_code 
		,fac_name,proc_name ,proc_code,operate_check,check_cycle ,to_char(install_date,'yyyy-MM-dd') 
		installDate,maker_name ,temp_min,temp_max ,emp_num from FAC_INFO join FAC_CONN_PROC 
		using(fac_code) join COM_CODE_PROC using(proc_code) </select> -->

	<!-- 설비등록 -->
	<insert id="facRegister" parameterType="FacInfoVO">
	INSERT INTO fac_info
		VALUES ('EQMAN'||fac_seq.nextval,#{facName},#{installDate},#{tempMin},#{tempMax},#{makerName},#{checkCycle},#{operateCheck},#{empNum})
	</insert>


	<!-- 공정+설비등록 -->
	<insert id="insertFacList" parameterType="FacInfoListVO">
	INSERT ALL into fac_info
		values('EQMAN'||fac_seq.nextval,
		#{list[0].facName},
		#{list[0].installDate},
		#{list[0].tempMin},
		#{list[0].tempMax},
		#{list[0].makerName},
		#{list[0].checkCycle},
		#{list[0].operateCheck},
		#{list[0].empNum})
		<foreach collection="list" item="vo"
			close="SELECT * FROM DUAL" separator=" ">
			INTO FAC_CONN_PROC
		  VALUES (fac_conn_proc_seq.nextval,'EQMAN'||fac_seq.currval,#{vo.procCode})
		</foreach>
	</insert>
	
	
	<!-- 점검등록 -->
	<insert id="insertConfirmList" parameterType="FacConfirmVO">
   INSERT INTO fac_confirm(confirm_code,confirm_date,confirm_category,action_history,decision,confirm_issue,emp_num,fac_code)
		VALUES ('CONFIRM'||CONFIRM_seq.nextval,current_date,#{confirmCategory},#{actionHistory},#{decision},#{confirmIssue},#{empNum},#{facCode})
	</insert>

	<!-- 설비별 공정수정 -->
	<insert id="insertProcList" parameterType="String">
	INSERT ALL
		<foreach collection="list" item="vo" close="SELECT * FROM DUAL" separator=" ">
		    INTO FAC_CONN_PROC
		  VALUES (fac_conn_proc_seq.nextval,#{vo.facCode},#{vo.procCode})
		</foreach>
	</insert>

	<!-- 설비 별 공정조회 -->
	<select id="getFacConnProcList" parameterType="String" resultType="FacConnProcVO">
		SELECT a.proc_code,
		       b.proc_name
		  FROM FAC_CONN_PROC a
		  JOIN com_code_proc b
		    ON a.proc_code = b.proc_code
		 WHERE fac_code=#{facCode}
	</select>

	<!-- 해당설비 공정삭제 -->
	<delete id="facConnProcDelete" parameterType="String">
   DELETE FROM FAC_CONN_PROC 
		 WHERE fac_code=#{facCode}
	</delete>

	<!-- 설비수정 -->
	<update id="facUpdate" parameterType="FacInfoVO">
		UPDATE fac_info
		   SET fac_name = #{facName},
		       temp_min = #{tempMin},
		       temp_max = #{tempMax},
		       maker_name = #{makerName},
		       check_cycle = #{checkCycle},
		       operate_check =#{operateCheck},
		       emp_num = #{empNum}
		 WHERE fac_code = #{facCode}
	</update>

	<!-- 점검수정 -->
	<update id="confirmUpdate" parameterType="FacConfirmVO">
		UPDATE fac_confirm
		   SET action_history = #{actionHistory},
		   	   confirm_category = #{confirmCategory},
		   	   confirm_issue = #{confirmIssue},
		   	   decision = #{decision}
		 WHERE confirm_code = #{confirmCode}	   	   
	</update>
	
	<!-- 비가동수정
	<update id="downTimeUpdate" parameterType="FacDownTimeVO">
		UPDATE fac_downTime
		   SET downtime_reason = #{downTimeReason},
		   	   reason_explain=#{reasonExplain},
		   	   DOWNTIME_START_DAY=to_date(#{downtimeStartDay},'YYYY-MM-DD'),
		   	   START_TIME=to_date(#{startTime},'PM HH24:MI')
		 WHERE DOWNTIME_CODE=#{downtimeCode} 	   
	</update> -->	
	
	<!-- 설비삭제 -->
	<delete id="facDelete" parameterType="FacInfoVO">
   DELETE FROM fac_info 
		 WHERE fac_code=#{facCode}
	</delete>
	
	<!-- 점검삭제 -->
	<delete id="confirmDelete" parameterType="FacConfirmVO">
   DELETE FROM FAC_CONFIRM 
		 WHERE confirm_code=#{confirmCode}
	</delete>
	
	<!-- 비가동삭제 -->
	<delete id="downTimeDelete" parameterType="FacDownTimeVO">
	DELETE FROM FAC_DOWNTIME
		  WHERE downTime_code=#{downTimeCode}	
	</delete>

	<!-- 공정코드목록 -->
	<select id="getproclist" resultType="FacConnProcVO">
		SELECT proc_code, proc_name
		  FROM COM_CODE_PROC
	</select>

	<!-- 공정코드검색조회 -->
	<select id="getprocminilist" resultType="FacConnProcVO">
		SELECT proc_code,
		       proc_name
		  FROM COM_CODE_PROC
		 WHERE proc_name LIKE '%'|| #{keyword} || '%'
	</select>


	<!-- 점검전체조회 -->
	<select id="getConfirmList" resultType="FacConfirmVO">
		SELECT a.confirm_code,
			   b.fac_name,
		       a.action_history,
		       a.confirm_category,
		       a.confirm_issue,
		       a.decision,
		       to_char(confirm_date,'yyyy-MM-dd') confirmDate,
		       a.emp_num
		  FROM FAC_CONFIRM a
		  JOIN FAC_INFO b
		 USING (fac_code)
	</select>

	<!-- 설비코드검색조회 -->
	<select id="getfacminilist" resultType="FacInfoVO">
		SELECT fac_code,
		       fac_name,
		       operate_check
		       from fac_info
		 WHERE fac_name LIKE '%'|| #{keyword} || '%'
	</select>
	
	<!-- 점검기간 조회 -->
	<select id="confirmdaysSearchAjax" resultType="FacConfirmVO">
		SELECT  a.confirm_code,
				to_char(confirm_date,'yyyy-MM-dd') confirm_Date,
				b.fac_name,
				a.action_history,
				a.confirm_category,
				a.confirm_issue,
				a.decision,
				a.emp_num		
		   FROM FAC_CONFIRM a
		   JOIN FAC_INFO b on a.fac_code=b.fac_code
		  WHERE confirm_date 
		BETWEEN to_date(#{confirmday1},'YYYY-MM-DD')
		    AND to_date(#{confirmday2},'YYYY-MM-DD')		        
	</select>

	<!--비가동전체조회 -->
	<select id="getDownTimeList" resultType="FacDownTimeVO">
		SELECT a.downtime_code,
			   b.fac_name ,
		 	   a.downtime_reason ,
			   a.reason_explain ,
			   to_char(DOWNTIME_START_DAY,'yyyy-MM-dd') DOWNTIME_START_DAY ,
			   to_char(START_TIME,'PM HH24:MI') START_TIME,
			   NVL2(a.DOWNTIME_END_DAY,to_char(a.DOWNTIME_END_DAY,'yyyy-MM-dd'),'') AS DOWNTIME_END_DAY,
			   NVL2(a.END_TIME,to_char(a.END_TIME,'PM HH24:MI'),'') AS END_TIME,
			   b.OPERATE_CHECK,
			   a.emp_num
		  FROM FAC_DOWNTIME a
		  JOIN FAC_INFO b
		 USING (fac_code)
		 WHERE downtime_start_day is not null 
		   AND downtime_end_day is null or operate_check = 'N'
	</select>
	
	<!-- 비가동등록 -->
	<insert id="insertDownTimeList" parameterType="FacDownTimeVO">
	INSERT INTO FAC_DOWNTIME(DOWNTIME_CODE,FAC_CODE,DOWNTIME_REASON,REASON_EXPLAIN,DOWNTIME_START_DAY,START_TIME,EMP_NUM)
	VALUES('REST'||rest_seq.nextval,#{facCode},#{downTimeReason},#{reasonExplain},current_date,current_date,#{empNum})	
	</insert>
	
	
	<!--설비등록시 설비비가동으로 자동 등록 
	<insert id="insertDownFac" parameterType="FacInfoVO">
	 insert into fac_downtime(downtime_code, fac_code, dowtime_reason,start_time,dowtime_start_day,emp_num,reason_explain) values() 
	</insert>
	-->
</mapper>