<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.pen.app.bns.mapper.BnsMapper">


	<!-- 주문서 전체 조회 -->
	<select id="getOrdList" resultType="BnsOrdVO">
		select distinct o.ord_code
		ord_code, acc_code,
		acc_name,to_char(ord_date,'YYYY-MM-DD') as
		ord_date,to_char(ord_due_date,'YYYY-MM-DD') as
		ord_due_date,ord_progress, e.emp_name emp_name,ord_note
		from
		bns_order_detail d join bns_order o
		on(d.ord_code =o.ord_code)
		join
		com_info_emp e
		on(o.emp_num = e.emp_num)
		order by ord_code desc
	</select>

	<!-- 주문서 조건 조회 -->
	<select id="getOrdListCon" resultType="BnsOrdVO">
		select distinct o.ord_code
		ord_code, acc_code,
		acc_name,to_char(ord_date,'YYYY-MM-DD') as
		ord_date,
		to_char(ord_due_date,'YYYY-MM-DD') as
		ord_due_date,ord_progress,
		e.emp_name emp_name,ord_note
		from
		bns_order_detail d join bns_order o
		on(d.ord_code =o.ord_code)
		join
		com_info_emp e
		on(o.emp_num = e.emp_num)
		where (acc_name = #{accName} or
		#{accName} is null)
		and (ord_date = #{ordDate} or #{ordDate} is null)
		and (ord_due_date =
		#{ordDueDate} or #{ordDueDate} is null)
	</select>

	<!-- 주문서 등록 -->

	<insert id="insertOrdList">

		insert all into bns_order values('bns_ord_'||LPAD(ord_seq.nextval, 3,
		'0'),#{list[0].accCode},#{list[0].accName},#{list[0].ordDate},#{list[0].ordDueDate},'접수완료',#{list[0].empNum},'비고')

		<foreach collection="list" item="vo"
			close="SELECT * FROM DUAL" separator=" ">
			into bns_order_detail
			values('bns_ord_det'||LPAD(get_ord_det_seq,3,'0'),'bns_ord_'||LPAD(ord_seq.currval,
			3,
			'0'),#{vo.prodCode},#{vo.prodName},#{vo.ordDetPrice},#{vo.ordDetQuan},#{vo.ordDetTotPrice},'접수완료')
		</foreach>

	</insert>

	<!-- 주문서 수정 -->
	<update id="modOrdList">

		declare begin
		update bns_order set ord_due_date = #{list[0].ordDueDate}
		, ord_note =
		#{list[0].ordNote} where ord_code = #{list[0].ordCode};

		<foreach collection="list" item="vo" index="index"
			separator=";" close="; END;">

			merge into
			bns_order_detail
			using dual
			on(ord_det_code =
			#{vo.ordDetCode})

			when matched then
			UPDATE
			SET
			ord_det_price =
			#{vo.ordDetPrice},
			ord_det_quan = #{vo.ordDetQuan},
			ord_det_tot_price =
			#{vo.ordDetTotPrice}
			where ord_code = #{vo.ordCode}

			WHEN NOT MATCHED
			THEN
			insert(ord_det_code,ord_code,prod_code,prod_name,ord_det_price,ord_det_quan,ord_det_tot_price)
			values('bns_ord_det'||LPAD(get_ord_det_seq,3,'0'),#{vo.ordCode},#{vo.prodCode},#{vo.prodName},#{vo.ordDetPrice},#{vo.ordDetQuan},#{vo.ordDetTotPrice})

			<!-- UPDATE bns_order_detail SET ord_det_code = #{vo.ordDetCode}, ord_code 
				= ${vo.ordCode}, prod_code = #{vo.prodCode}, prod_name = #{vo.prodName}, 
				ord_det_price = #{vo.ordDetPrice}, ord_det_quan = #{vo.ordDetQuan}, ord_det_tot_price 
				= #{vo.ordDetTotPrice} where ord_code = #{vo.ordCode} -->
		</foreach>

	</update>

	

	<!-- 주문상세 취소 -->
	<delete id="delOrdDetList">
		delete from bns_order_detail where
		<foreach collection="list" item="vo" separator="OR">
			ord_det_code =
			#{vo.ordDetCode}
		</foreach>
	</delete>

	<!-- 주문서 취소 -->
	<delete id="delOrdList">
		delete from bns_order where
		<foreach collection="list" item="vo" separator="OR">
			ord_code = #{vo.ordCode}
		</foreach>
	</delete>

	<!-- <select id="getEmpList" resultType="BnsEmpVO"> select emp_num, emp_name 
		from com_info_emp </select> -->

	<!-- <select id ="getEmpKeyList" resultType="BnsEmpVO"> select emp_num, 
		emp_name from com_info_emp where emp_name =#{keyword} </select> -->

	<!-- 거래처코드,거래처명 조회 -->
	<select id="getAccList" resultType="BnsAccVO">
		select acc_code, acc_name
		from com_code_account
	</select>



	<!-- 거래처코드, 거래처명 검색 조회 -->
	<select id="getAccKeyList" resultType="BnsAccVO">
		select acc_code, acc_name
		from com_code_account
		where acc_name =#{keyword}
	</select>


	<!-- 제품코드, 제품명 조회 -->
	<select id="getProdList" resultType="BnsProdVO">
		select prod_code, prod_name
		from com_code_prod
	</select>

	<!-- 제품코드, 제품명 검색 조회 -->
	<select id="getProdKeyList" resultType="BnsProdVO">
		select prod_code,
		prod_name
		from com_code_prod
		where prod_name = #{keyword}
	</select>

	<!-- 주문코드,현재날짜 조회 -->
	<select id="getOrdCode" resultType="BnsOrdVO">
		select
		'bns_ord_'||max(lpad(subStr(ord_code,-3)+1,3,'0')) ord_code,
		to_char(sysdate,'YYYY-MM-DD') as ord_date from bns_order
	</select>


	<!-- 주문서 수정 모달창 내의 제품 리스트 조회 -->
	<select id="getProdModList" resultType="BnsOrdVO">
		select *
		from
		bns_order_detail
		where ord_code = #{keyword}
	</select>




	<!-- 계약서 전체 조회 -->
	<select id="getContList" resultType="BnsContVO">
		select distinct c.cont_code
		cont_code, acc_code,
		acc_name,to_char(cont_date,'YYYY-MM-DD') as
		cont_date,to_char(cont_start_date,'YYYY-MM-DD') as
		cont_start_date,to_char(cont_due_date,'YYYY-MM-DD') as
		cont_due_date,cont_progress, e.emp_name emp_name,cont_note
		from
		bns_contract_detail d join bns_contract c
		on(d.cont_code =c.cont_code)
		join com_info_emp e
		on(c.emp_num = e.emp_num)
		order by cont_code desc
	</select>

	<!-- 계약코드,현재날짜 조회 -->
	<select id="getContCode" resultType="BnsContVO">
		select
		'bns_cont_'||max(lpad(subStr(cont_code,-3)+1,3,'0')) cont_code,
		to_char(sysdate,'YYYY-MM-DD') as cont_date from bns_contract
	</select>

	<!-- 계약서 조건 조회 -->
	<!-- <select id="getContListCon" resultType="BnsContVO"> select distinct 
		o.cont_code cont_code, acc_code, acc_name,to_char(cont_date,'YYYY-MM-DD') 
		as cont_date,to_char(cont_due_date,'YYYY-MM-DD') as cont_due_date,cont_progress, 
		e.emp_name emp_name,cont_note from bns_contract_detail d join bns_contract 
		c on(d.cont_code =c.cont_code) join com_info_emp e on(c.emp_num = e.emp_num) 
		order by cont_code desc where (acc_name = #{accName} or #{accName} is null) 
		and (cont_date = #{contDate} or #{contDate} is null) and (cont_due_date = 
		#{contDueDate} or #{contDueDate} is null) </select> -->

	<!-- 계약서 등록 -->
	<insert id="insertContList">
		insert all into bns_contract
		values('bns_cont_'||LPAD(cont_seq.nextval, 3,
		'0'),#{list[0].accCode},#{list[0].accName},#{list[0].contDate},#{list[0].contDueDate},'접수완료','비고',#{list[0].empNum},
		#{list[0].contStartDate})
		<foreach collection="list" item="vo"
			close="SELECT * FROM DUAL" separator=" ">
			into bns_contract_detail
			values('bns_cont_det_'||LPAD(get_cont_det_seq,3,'0'),'bns_cont_'||LPAD(cont_seq.currval,
			3,
			'0'),#{vo.prodCode},#{vo.prodName},#{vo.contDetPrice},#{vo.contDetQuan},#{vo.contDetRelease},'납기불필요',#{vo.contDetTotPrice})
		</foreach>
	</insert>

	<!-- 계약서 수정 -->
	<update id="modContList">
		declare begin
		update bns_contract set cont_start_date =
		#{list[0].contStartDate},
		cont_due_date = #{list[0].contDueDate} ,
		cont_note =
		#{list[0].contNote} where cont_code = #{list[0].contCode};
		<foreach collection="list" item="vo" index="index"
			separator=";" close="; END;">
			merge into
			bns_contract_detail
			using dual
			on(cont_det_code =
			#{vo.contDetCode})
			when matched then
			UPDATE
			SET
			cont_det_price =
			#{vo.contDetPrice},
			cont_det_quan = #{vo.contDetQuan},
			cont_det_tot_price = #{vo.contDetTotPrice},
			cont_det_release =
			#{vo.contDetRelease}

			where cont_code = #{vo.contCode}
			WHEN NOT MATCHED
			THEN
			insert(cont_det_code,cont_code,prod_code,prod_name,cont_det_price,cont_det_quan,cont_det_release,cont_det_progress,cont_det_tot_price)
			values('bns_cont_det_'||LPAD(get_cont_det_seq,3,'0'),#{vo.contCode},#{vo.prodCode},#{vo.prodName},#{vo.contDetPrice},#{vo.contDetQuan},#{vo.contDetRelease},'납기불필요',#{vo.contDetTotPrice})
			<!-- UPDATE bns_order_detail SET ord_det_code = #{vo.ordDetCode}, ord_code 
				= ${vo.ordCode}, prod_code = #{vo.prodCode}, prod_name = #{vo.prodName}, 
				ord_det_price = #{vo.ordDetPrice}, ord_det_quan = #{vo.ordDetQuan}, ord_det_tot_price 
				= #{vo.ordDetTotPrice} where ord_code = #{vo.ordCode} -->
		</foreach>
	</update>



	<!-- 계약 상세 취소 -->
	<delete id="delContDetList">
		delete from bns_contract_detail where
		<foreach collection="list" item="vo" separator="OR">
			cont_det_code =
			#{vo.contDetCode}
		</foreach>
	</delete>

	<!-- 계약서 취소 -->
	<delete id="delContList">
		delete from bns_contract where
		<foreach collection="list" item="vo" separator="OR">
			cont_code = #{vo.contCode}
		</foreach>
	</delete>

	<!-- 계약서 수정 모달창 내의 제품 리스트 조회 -->
	<select id="getContProdModList" resultType="BnsContVO">
		select
		cont_det_code,prod_name, prod_code, cont_det_quan, cont_det_price,
		cont_det_tot_price,to_char(cont_det_release,'yyyy-mm-dd') as
		cont_det_release
		from bns_contract_detail
		where cont_code = #{keyword}
	</select>

</mapper>
